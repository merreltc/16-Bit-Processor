////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : intReg16_test.vf
// /___/   /\     Timestamp : 01/24/2017 14:29:02
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath "C:/Users/smithlb/Documents/CSSE232/New folder/intReg16/remote_sources/_/debounce/ipcore_dir" -sympath "C:/Users/smithlb/Documents/CSSE232/New folder/intReg16/work" -intstyle ise -family spartan3e -verilog "C:/Users/smithlb/Documents/CSSE232/New folder/intReg16/work/intReg16_test.vf" -w "C:/Users/smithlb/Documents/CSSE232/New folder/intReg16/intReg16_test.sch"
//Design Name: intReg16_test
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module buf16_MUSER_intReg16_test(I, 
                                 O);

    input [15:0] I;
   output [15:0] O;
   
   
   BUF  XLXI_1 (.I(I[1]), 
               .O(O[1]));
   BUF  XLXI_2 (.I(I[2]), 
               .O(O[2]));
   BUF  XLXI_3 (.I(I[3]), 
               .O(O[3]));
   BUF  XLXI_4 (.I(I[4]), 
               .O(O[4]));
   BUF  XLXI_5 (.I(I[5]), 
               .O(O[5]));
   BUF  XLXI_6 (.I(I[6]), 
               .O(O[6]));
   BUF  XLXI_7 (.I(I[7]), 
               .O(O[7]));
   BUF  XLXI_8 (.I(I[8]), 
               .O(O[8]));
   BUF  XLXI_9 (.I(I[9]), 
               .O(O[9]));
   BUF  XLXI_10 (.I(I[10]), 
                .O(O[10]));
   BUF  XLXI_11 (.I(I[11]), 
                .O(O[11]));
   BUF  XLXI_12 (.I(I[12]), 
                .O(O[12]));
   BUF  XLXI_13 (.I(I[13]), 
                .O(O[13]));
   BUF  XLXI_14 (.I(I[14]), 
                .O(O[14]));
   BUF  XLXI_15 (.I(I[15]), 
                .O(O[15]));
   BUF  XLXI_16 (.I(I[0]), 
                .O(O[0]));
endmodule
`timescale 1ns / 1ps

module FTC_MXILINX_intReg16_test(C, 
                                 CLR, 
                                 T, 
                                 Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDC  I_36_35 (.C(C), 
                .CLR(CLR), 
                .D(TQ), 
                .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module intReg16_MUSER_intReg16_test(CLK, 
                                    dataIn, 
                                    intLvl0, 
                                    intLvl1, 
                                    int0, 
                                    int1, 
                                    int2, 
                                    int3, 
                                    RESET, 
                                    Write, 
                                    dataOut, 
                                    int);

    input CLK;
    input [15:0] dataIn;
    input intLvl0;
    input intLvl1;
    input int0;
    input int1;
    input int2;
    input int3;
    input RESET;
    input Write;
   output [15:0] dataOut;
   output int;
   
   wire G;
   wire XLXN_170;
   wire XLXN_179;
   wire XLXN_181;
   wire XLXN_182;
   wire XLXN_184;
   wire XLXN_204;
   wire [15:0] dataOut_DUMMY;
   
   assign dataOut[15:0] = dataOut_DUMMY[15:0];
   GND  XLXI_38 (.G(G));
   AND2  XLXI_40 (.I0(dataOut_DUMMY[4]), 
                 .I1(dataOut_DUMMY[0]), 
                 .O(XLXN_170));
   AND2  XLXI_41 (.I0(dataOut_DUMMY[5]), 
                 .I1(dataOut_DUMMY[1]), 
                 .O(XLXN_181));
   AND2  XLXI_42 (.I0(dataOut_DUMMY[6]), 
                 .I1(dataOut_DUMMY[2]), 
                 .O(XLXN_182));
   AND2  XLXI_43 (.I0(dataOut_DUMMY[7]), 
                 .I1(dataOut_DUMMY[3]), 
                 .O(XLXN_179));
   OR4  XLXI_44 (.I0(XLXN_179), 
                .I1(XLXN_182), 
                .I2(XLXN_181), 
                .I3(XLXN_170), 
                .O(XLXN_184));
   FDRSE #( .INIT(1'b0) ) XLXI_46 (.C(CLK), 
                  .CE(G), 
                  .D(dataIn[9]), 
                  .R(XLXN_204), 
                  .S(intLvl1), 
                  .Q(dataOut_DUMMY[9]));
   FDRSE #( .INIT(1'b0) ) XLXI_47 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[0]), 
                  .R(RESET), 
                  .S(int0), 
                  .Q(dataOut_DUMMY[0]));
   FDRSE #( .INIT(1'b0) ) XLXI_48 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[1]), 
                  .R(RESET), 
                  .S(int1), 
                  .Q(dataOut_DUMMY[1]));
   FDRSE #( .INIT(1'b0) ) XLXI_49 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[2]), 
                  .R(RESET), 
                  .S(int2), 
                  .Q(dataOut_DUMMY[2]));
   FDRSE #( .INIT(1'b0) ) XLXI_50 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[3]), 
                  .R(RESET), 
                  .S(int3), 
                  .Q(dataOut_DUMMY[3]));
   FDRSE #( .INIT(1'b0) ) XLXI_51 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[4]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[4]));
   FDRSE #( .INIT(1'b0) ) XLXI_52 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[5]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[5]));
   FDRSE #( .INIT(1'b0) ) XLXI_53 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[6]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[6]));
   FDRSE #( .INIT(1'b0) ) XLXI_54 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[7]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[7]));
   FDRSE #( .INIT(1'b0) ) XLXI_55 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[8]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[8]));
   FDRSE #( .INIT(1'b0) ) XLXI_56 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[10]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[10]));
   FDRSE #( .INIT(1'b0) ) XLXI_57 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[11]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[11]));
   FDRSE #( .INIT(1'b0) ) XLXI_58 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[12]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[12]));
   FDRSE #( .INIT(1'b0) ) XLXI_59 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[13]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[13]));
   FDRSE #( .INIT(1'b0) ) XLXI_60 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[14]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[14]));
   FDRSE #( .INIT(1'b0) ) XLXI_61 (.C(CLK), 
                  .CE(Write), 
                  .D(dataIn[15]), 
                  .R(RESET), 
                  .S(G), 
                  .Q(dataOut_DUMMY[15]));
   OR2  XLXI_62 (.I0(RESET), 
                .I1(intLvl0), 
                .O(XLXN_204));
   AND3  XLXI_63 (.I0(XLXN_184), 
                 .I1(dataOut_DUMMY[8]), 
                 .I2(dataOut_DUMMY[9]), 
                 .O(int));
endmodule
`timescale 1ns / 1ps

module intReg16_test(a_button, 
                     b_button, 
                     CLK, 
                     e_button, 
                     n_button, 
                     r_button, 
                     switch0, 
                     switch1, 
                     switch2, 
                     switch3, 
                     s_button, 
                     w_button, 
                     intr_0, 
                     intr_1, 
                     led0, 
                     led1, 
                     led2, 
                     led3, 
                     led4, 
                     led5, 
                     led6, 
                     led7, 
                     not_out);

    input a_button;
    input b_button;
    input CLK;
    input e_button;
    input n_button;
    input r_button;
    input switch0;
    input switch1;
    input switch2;
    input switch3;
    input s_button;
    input w_button;
   output intr_0;
   output intr_1;
   output led0;
   output led1;
   output led2;
   output led3;
   output led4;
   output led5;
   output led6;
   output led7;
   output not_out;
   
   wire [15:0] dataIn;
   wire [15:0] dataOut;
   wire G;
   wire inten;
   wire intLvl0;
   wire intLvl1;
   wire intMask0;
   wire intMask1;
   wire int0;
   wire int1;
   wire XLXN_1;
   wire XLXN_94;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_139;
   wire XLXN_170;
   wire not_out_DUMMY;
   wire intr_0_DUMMY;
   wire intr_1_DUMMY;
   
   assign intr_0 = intr_0_DUMMY;
   assign intr_1 = intr_1_DUMMY;
   assign not_out = not_out_DUMMY;
   intReg16_MUSER_intReg16_test  XLXI_1 (.CLK(CLK), 
                                        .dataIn(dataIn[15:0]), 
                                        .intLvl0(intLvl0), 
                                        .intLvl1(intLvl1), 
                                        .int0(XLXN_95), 
                                        .int1(XLXN_96), 
                                        .int2(G), 
                                        .int3(G), 
                                        .RESET(XLXN_94), 
                                        .Write(XLXN_1), 
                                        .dataOut(dataOut[15:0]), 
                                        .int(XLXN_139));
   debouncer  XLXI_5 (.button(s_button), 
                     .clk(CLK), 
                     .reset(G), 
                     .button_hi(XLXN_1), 
                     .button_lo(), 
                     .debutton());
   debouncer  XLXI_10 (.button(w_button), 
                      .clk(CLK), 
                      .reset(G), 
                      .button_hi(XLXN_95), 
                      .button_lo(), 
                      .debutton());
   debouncer  XLXI_11 (.button(e_button), 
                      .clk(CLK), 
                      .reset(G), 
                      .button_hi(XLXN_96), 
                      .button_lo(), 
                      .debutton());
   debouncer  XLXI_12 (.button(n_button), 
                      .clk(CLK), 
                      .reset(G), 
                      .button_hi(XLXN_94), 
                      .button_lo(), 
                      .debutton());
   debouncer  XLXI_13 (.button(r_button), 
                      .clk(CLK), 
                      .reset(G), 
                      .button_hi(XLXN_111), 
                      .button_lo(), 
                      .debutton());
   debounceRotary  XLXI_14 (.A(a_button), 
                           .B(b_button), 
                           .CLK(CLK), 
                           .RESET(G), 
                           .rot_event(XLXN_97), 
                           .rot_event_delay(), 
                           .rot_left());
   (* HU_SET = "XLXI_15_1" *) 
   FTC_MXILINX_intReg16_test #( .INIT(1'b0) ) XLXI_15 (.C(CLK), 
                                      .CLR(G), 
                                      .T(XLXN_97), 
                                      .Q(inten));
   GND  XLXI_16 (.G(G));
   (* HU_SET = "XLXI_17_0" *) 
   FTC_MXILINX_intReg16_test #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
                                      .CLR(G), 
                                      .T(XLXN_111), 
                                      .Q(XLXN_109));
   INV  XLXI_19 (.I(XLXN_109), 
                .O(XLXN_110));
   AND2  XLXI_20 (.I0(XLXN_109), 
                 .I1(XLXN_111), 
                 .O(intLvl0));
   AND2  XLXI_21 (.I0(XLXN_111), 
                 .I1(XLXN_110), 
                 .O(intLvl1));
   BUF  XLXI_22 (.I(dataOut[0]), 
                .O(led0));
   BUF  XLXI_23 (.I(dataOut[1]), 
                .O(led1));
   BUF  XLXI_24 (.I(dataOut[4]), 
                .O(led2));
   BUF  XLXI_25 (.I(dataOut[5]), 
                .O(led3));
   BUF  XLXI_27 (.I(dataOut[8]), 
                .O(led5));
   BUF  XLXI_28 (.I(dataOut[9]), 
                .O(led6));
   BUF  XLXI_29 (.I(XLXN_139), 
                .O(led7));
   BUF  XLXI_30 (.I(switch0), 
                .O(int0));
   BUF  XLXI_31 (.I(switch1), 
                .O(int1));
   BUF  XLXI_32 (.I(switch2), 
                .O(intMask0));
   BUF  XLXI_33 (.I(switch3), 
                .O(intMask1));
   buf16_MUSER_intReg16_test  XLXI_34 (.I({G, G, G, G, G, G, G, inten, G, G, 
         intMask1, intMask0, G, G, int1, int0}), 
                                      .O(dataIn[15:0]));
   BUF  XLXI_39 (.I(XLXN_170), 
                .O(led4));
   AND2  XLXI_40 (.I0(intr_1_DUMMY), 
                 .I1(intr_0_DUMMY), 
                 .O(XLXN_170));
   AND2  XLXI_41 (.I0(not_out_DUMMY), 
                 .I1(dataOut[0]), 
                 .O(intr_0_DUMMY));
   AND2  XLXI_42 (.I0(not_out_DUMMY), 
                 .I1(dataOut[1]), 
                 .O(intr_1_DUMMY));
   INV  XLXI_43 (.I(G), 
                .O(not_out_DUMMY));
endmodule
